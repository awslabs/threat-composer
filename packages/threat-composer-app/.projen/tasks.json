{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "echo Building Artifacts for Websites, Browser Extensions and IDE Plugins"
        },
        {
          "spawn": "compile:website"
        },
        {
          "spawn": "compile:browser-extension"
        },
        {
          "spawn": "compile:ide-extension"
        }
      ]
    },
    "compile:browser-extension": {
      "name": "compile:browser-extension",
      "steps": [
        {
          "exec": "INLINE_RUNTIME_CHUNK=false BUILD_PATH=./build/browser-extension/ REACT_APP_APP_MODE=browser-extension react-scripts build"
        }
      ]
    },
    "compile:ide-extension": {
      "name": "compile:ide-extension",
      "steps": [
        {
          "exec": "INLINE_RUNTIME_CHUNK=false BUILD_PATH=./build/ide-extension/ REACT_APP_APP_MODE=ide-extension react-scripts build"
        }
      ]
    },
    "compile:website": {
      "name": "compile:website",
      "steps": [
        {
          "exec": "BUILD_PATH=./build/website/ react-scripts build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files"
    },
    "dev": {
      "name": "dev",
      "description": "Starts the react application",
      "steps": [
        {
          "exec": "react-scripts start"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern $@ src test build-tools",
          "receiveArgs": true
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "yarn install --check-files"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "yarn install --check-files --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation",
      "steps": [
        {
          "exec": "[ -d ./build/storybook ] || mkdir -p ./build/storybook"
        },
        {
          "exec": "cp -r ../threat-composer/storybook.out/ ./build/storybook/"
        }
      ]
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "react-scripts test --watchAll=false --passWithNoTests"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npx npm-check-updates@16 --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@cloudscape-design/jest-preset,@testing-library/jest-dom,@testing-library/react,@testing-library/user-event,@types/jest,@types/react,@types/react-dom,@types/react-router-dom,@types/uuid,eslint-import-resolver-typescript,eslint-plugin-import,merge,@aws-northstar/ui,@aws/threat-composer,@cloudscape-design/components,@cloudscape-design/design-tokens,@cloudscape-design/global-styles,docx,react,react-dom,react-router-dom,unist-util-visit,uuid,web-vitals"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade @cloudscape-design/jest-preset @testing-library/jest-dom @testing-library/react @testing-library/user-event @types/jest @types/node @types/react @types/react-dom @types/react-router-dom @types/uuid @typescript-eslint/eslint-plugin @typescript-eslint/parser constructs eslint-import-resolver-typescript eslint-plugin-import eslint merge projen typescript @aws-northstar/ui @aws/threat-composer @cloudscape-design/components @cloudscape-design/design-tokens @cloudscape-design/global-styles docx react react-dom react-router-dom react-scripts remark-frontmatter remark-gfm remark-parse unified unist-util-visit uuid web-vitals"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
